<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Administración - CHC HelpDesk</title>
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    .wrap { max-width: 1100px; margin: 0 auto; padding: 24px; }
    .page-title { font-size: 1.8rem; font-weight: bold; margin-bottom: 10px; }
    .subtitle { color: #64748b; margin-bottom: 24px; }

    .grid {
      display: grid;
      gap: 16px;
      grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    }
    .card {
      background: #1e293b;
      color: #e2e8f0;
      border-radius: 10px;
      padding: 18px;
      transition: transform .15s ease, box-shadow .15s ease;
    }
    .card:hover { transform: translateY(-2px); box-shadow: 0 8px 20px rgba(2,6,23,.35); }
    .card h3 { margin: 0 0 8px; font-size: 1.1rem; }
    .card p { margin: 0 0 12px; color: #94a3b8; font-size: .95rem; }
    .card a { text-decoration: none; font-weight: 600; color: #93c5fd; }

    /* --- Bloques claros para formularios/tablas --- */
    .card-light{
      background:#ffffff; color:#0f172a; border:1px solid #e5e7eb;
      border-radius:12px; padding:18px; margin-top:24px;
      box-shadow:0 2px 10px rgba(0,0,0,.06);
    }
    .card-light h2{ margin:0 0 10px; font-size:1.2rem; }

    .form-grid{ display:grid; gap:12px; grid-template-columns: 1fr 1fr; }
    .form-grid .full{ grid-column: 1 / -1; }
    .field label{ display:block; font-weight:600; margin-bottom:6px; color:#334155; }
    .field input[type="text"],
    .field input[type="date"],
    .field select,
    .field textarea{
      width:100%; box-sizing:border-box; border:1px solid #cbd5e1; border-radius:8px; padding:10px 12px;
      background:#fff; color:#0f172a;
    }
    .hint{ color:#64748b; font-size:.9rem; }

    .table-wrap{ margin-top:10px; overflow:auto; }
    table.simple{ width:100%; border-collapse:collapse; font-size:14px; background:#fff; }
    table.simple thead th{
      text-align:left; background:#f1f5f9; color:#334155; padding:10px 12px; border-bottom:1px solid #e2e8f0; white-space:nowrap;
    }
    table.simple tbody td{ padding:10px 12px; border-bottom:1px solid #f1f5f9; vertical-align:top; }

    .btn{ display:inline-block; padding:.6rem .9rem; border-radius:8px; border:1px solid transparent; cursor:pointer; }
    .btn-primary{ background:#2563eb; color:#fff; }
    .btn:disabled{ opacity:.6; cursor:not-allowed; }
    .muted{ color:#64748b; }
    .ok{ color:#16a34a; }
    .err{ color:#dc2626; }
  </style>
</head>
<body>
  <div class="wrap">
    <h1 class="page-title">Panel de Administración</h1>
    <p class="subtitle">Configura usuarios, permisos y catálogos del HelpDesk.</p>

    <div class="grid">
      <div class="card">
        <h3>Usuarios</h3>
        <p>Alta, edición y control de accesos.</p>
        <a href="/admin/users">Entrar →</a>
      </div>
      <div class="card">
        <h3>Departamentos</h3>
        <p>Gestión de áreas y asignación de agentes.</p>
        <a href="/admin/departments">Entrar →</a>
      </div>
      <div class="card">
        <h3>Roles y permisos</h3>
        <p>Definir permisos para cada tipo de usuario.</p>
        <a href="/admin/roles">Entrar →</a>
      </div>
      <div class="card">
        <h3>Categorías / SLAs</h3>
        <p>Clasificación y tiempos objetivo de atención.</p>
        <a href="/admin/config">Entrar →</a>
      </div>
    </div>

    <!-- ===================== Crear anuncio ===================== -->
    <section class="card-light">
      <h2>Crear anuncio</h2>
      <form id="ann-form" class="form-grid" onsubmit="return false;">
        <div class="field">
          <label for="ann-dept">Departamento</label>
          <input id="ann-dept" name="dept" type="text" placeholder="ALL (general) o p.ej. CEDIS">
          <div class="hint">Escribe <b>ALL</b> para anuncio general, o el nombre exacto del departamento.</div>
        </div>

        <div class="field">
          <label for="ann-active">Activo</label>
          <select id="ann-active" name="active">
            <option value="1" selected>Sí</option>
            <option value="0">No</option>
          </select>
        </div>

        <div class="field full">
          <label for="ann-title">Título</label>
          <input id="ann-title" name="title" type="text" maxlength="120" required>
        </div>

        <div class="field full">
          <label for="ann-body">Mensaje</label>
          <textarea id="ann-body" name="body" rows="3" maxlength="500" required></textarea>
        </div>

        <div class="field">
          <label for="ann-until">Vigente hasta (opcional)</label>
          <input id="ann-until" name="until_date" type="date">
        </div>

        <div class="field" style="display:flex;align-items:flex-end;">
          <button id="ann-submit" class="btn btn-primary" type="submit">Publicar anuncio</button>
          <span id="ann-status" class="muted" style="margin-left:10px;"></span>
        </div>
      </form>
    </section>

    <!-- ================== Anuncios recientes =================== -->
    <section class="card-light">
      <h2>Anuncios recientes</h2>
      <div class="table-wrap">
        <table class="simple">
          <thead>
            <tr>
              <th style="width:140px;">Fecha</th>
              <th style="width:160px;">Departamento</th>
              <th style="width:260px;">Título</th>
              <th>Mensaje</th>
            </tr>
          </thead>
          <tbody id="ann-tbody">
            <tr><td colspan="4" class="muted">Cargando…</td></tr>
          </tbody>
        </table>
      </div>
    </section>
  </div>

  <script>
  (function(){
    const $ = s => document.querySelector(s);

    async function loadAnnouncements(){
      try{
        const res = await fetch('/api/announcements?limit=20', { credentials:'include' });
        const list = res.ok ? await res.json() : [];
        const tbody = $('#ann-tbody');
        tbody.innerHTML = '';

        if(!list.length){
          tbody.innerHTML = '<tr><td colspan="4" class="muted">No hay anuncios.</td></tr>';
          return;
        }

        const frag = document.createDocumentFragment();
        list.forEach(a=>{
          const tr = document.createElement('tr');
          tr.innerHTML = `
            <td>${a.created_at}</td>
            <td>${a.dept === 'ALL' ? 'General' : a.dept}</td>
            <td><strong>${a.title}</strong></td>
            <td>${a.body}</td>
          `;
          frag.appendChild(tr);
        });
        tbody.appendChild(frag);
      }catch(e){
        console.error(e);
        $('#ann-tbody').innerHTML = '<tr><td colspan="4" class="err">No se pudieron cargar.</td></tr>';
      }
    }

    async function submitAnnouncement(){
      const btn = $('#ann-submit');
      const status = $('#ann-status');
      status.className = 'muted'; status.textContent = '';
      btn.disabled = true;

      const payload = {
        dept: ($('#ann-dept').value || 'ALL').trim() || 'ALL',
        title: $('#ann-title').value.trim(),
        body: $('#ann-body').value.trim(),
        until_date: $('#ann-until').value || null,
        active: parseInt($('#ann-active').value,10)
      };

      if(!payload.title || !payload.body){
        status.className = 'err';
        status.textContent = 'Llena título y mensaje.';
        btn.disabled = false;
        return;
      }

      try{
        const res = await fetch('/api/announcements', {
          method:'POST',
          headers:{ 'Content-Type':'application/json' },
          credentials:'include',
          body: JSON.stringify(payload)
        });
        const data = await res.json();

        if(!res.ok || data.error){
          status.className = 'err';
          status.textContent = data.error || 'Error al publicar.';
        }else{
          status.className = 'ok';
          status.textContent = 'Publicado.';
          // limpia
          $('#ann-title').value = '';
          $('#ann-body').value = '';
          // recarga lista
          await loadAnnouncements();
        }
      }catch(e){
        console.error(e);
        status.className = 'err';
        status.textContent = 'Error de red.';
      }finally{
        btn.disabled = false;
        setTimeout(()=>{ status.className='muted'; status.textContent=''; }, 2000);
      }
    }

    $('#ann-form').addEventListener('submit', submitAnnouncement);
    loadAnnouncements();
  })();
  </script>
</body>
</html>
