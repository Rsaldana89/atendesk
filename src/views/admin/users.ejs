<h1 style="margin-bottom:6px;">Anuncios</h1>
<p class="hint" style="margin-top:-6px;margin-bottom:12px;">
  Publica avisos <b>generales (Todos)</b> o “a nombre” de un departamento.
  <br>Todos los usuarios verán todos los anuncios; el campo <i>De parte de</i> solo indica quién emite el anuncio.
</p>

<style>
  /* —— Tabla limpia y consistente —— */
  .table-wrap { margin: 12px 0 28px; overflow-x: auto; }
  table.stable {
    width: 100%; border-collapse: collapse; font-size: 14px;
    background: #fff; border-radius: 12px; overflow: hidden;
  }
  .stable thead th {
    text-align: left; background: #eef2ff; color: #334155;
    padding: 10px 12px; border-bottom: 1px solid #dbeafe; white-space: nowrap;
  }
  .stable tbody td {
    padding: 10px 12px; border-bottom: 1px solid #f1f5f9; vertical-align: top;
  }
  .stable tbody tr:nth-child(odd) { background: #fafafa; }
  .stable tbody tr:hover { background: #f3f4f6; }
  .th-sort {
    background: transparent; border: 0; font: inherit; color: inherit; cursor: pointer;
    display: inline-flex; align-items: center; gap: 6px; padding: 0;
  }
  .th-sort .chev { font-size: 11px; opacity: .45; }
  .th-sort[data-order="asc"] .chev.asc,
  .th-sort[data-order="desc"] .chev.desc { opacity: 1; }
  .mini-btn {
    padding: 6px 10px; border: 1px solid #cbd5e1; background: #fff; border-radius: 8px;
    cursor: pointer; transition: .15s ease-in-out; font-size: 14px;
  }
  .mini-btn:hover { background: #eef2ff; border-color: #b6c2ff; }
  .btn-danger { background:#ef4444; border-color:#dc2626; color:#fff; }
  .btn-danger:hover { background:#dc2626; }
  .btn-save   { background: #3b82f6; color: #fff; border: 1px solid #3b82f6; }
  .btn-save:hover   { background: #2563eb; border-color:#2563eb; }

  /* —— Modal overlay (para usuarios) —— */
  #modalOverlay { position: fixed; inset: 0; display: none; align-items: center; justify-content: center;
    background: rgba(0,0,0,.45); z-index: 1000; animation: fadeIn .2s ease-out; }
  .modal-card {
    background: #fff; width: min(700px, 92vw); border-radius: 12px; padding: 0; overflow: hidden;
    box-shadow: 0 20px 50px rgba(0,0,0,.35); animation: scaleIn .25s ease-out;
  }
  .modal-header { background: #3b82f6; color: #fff; padding: 14px 18px; font-weight: 600;
    display: flex; justify-content: space-between; align-items: center; }
  .modal-header .close { background: transparent; border: none; color: #fff; opacity: .9;
    font-size: 20px; line-height: 1; cursor: pointer; }
  .modal-body { padding: 18px 20px; }
  .modal-actions { display: flex; gap: 10px; justify-content: flex-end; margin: 12px 0 2px; }
  .grid-2 { display: grid; grid-template-columns: 1fr 1fr; gap: 12px; }
  .full { grid-column: 1 / -1; }

  .btn-cancel { background: #e5e7eb; border: 1px solid #cbd5e1; }
  .btn-cancel:hover { background: #e2e8f0; }

  input[type="text"], input[type="email"], input[type="password"], select, textarea {
    width: 100%; border: 1px solid #cbd5e1; border-radius: 8px; padding: 8px 10px;
    outline: none; transition: .15s ease-in-out; background: #fff;
  }
  input:focus, select:focus, textarea:focus { border-color: #3b82f6; box-shadow: 0 0 0 3px rgba(59,130,246,.15); }

  @keyframes fadeIn { from {background: rgba(0,0,0,0);} to {background: rgba(0,0,0,.45);} }
  @keyframes scaleIn { from {transform: scale(.95);} to {transform: scale(1);} }

  /* ========= Anuncios (alineado con el resto del panel) ========= */
  :root{
    --panel-bg: #f8fbff;
    --panel-border: #dbeafe;
    --panel-text: #334155;
  }
  .card-ann{
    background: var(--panel-bg);
    border: 1px solid var(--panel-border);
    border-radius: 12px;
    padding: 14px 16px;
    box-shadow: none;
  }
  .card-ann h2{
    margin: 0 0 10px;
    font-size: 1rem;
    color: var(--panel-text);
  }
  .card-ann .field label{ color: var(--panel-text); font-weight:600; }
  .card-ann .hint{ color:#6b7280; }
  .form-grid{ display:grid; grid-template-columns:1fr 1fr; gap:12px; }
  .form-grid .full{ grid-column:1 / -1; }
</style>

<!-- ============ SECCIÓN: CREAR ANUNCIO (de parte de...) ============ -->
<section class="card-ann">
  <h2>Crear anuncio</h2>
  <form id="annAdminForm" class="form-grid" onsubmit="return false;">
    <div class="field">
      <label for="ann-dept">De parte de</label>
      <select id="ann-dept" name="dept">
        <option value="ALL" selected>Todos (General)</option>
        <% departamentos.forEach(d => { %>
          <option value="<%= d.name %>"><%= d.name %></option>
        <% }) %>
      </select>
      <div class="hint">Solo identifica el área emisora; no limita a quién se muestra.</div>
    </div>

    <div class="field full">
      <label for="ann-title">Título</label>
      <input id="ann-title" name="title" type="text" maxlength="120" required>
    </div>

    <div class="field full">
      <label for="ann-body">Mensaje</label>
      <textarea id="ann-body" name="body" rows="3" maxlength="500" required></textarea>
    </div>

    <div class="field">
      <label for="ann-until">Vigente hasta (opcional)</label>
      <input id="ann-until" name="until_date" type="date">
    </div>

    <div class="field" style="display:flex;align-items:flex-end;">
      <button id="ann-submit" class="mini-btn btn-save" type="submit">Publicar anuncio</button>
      <span id="ann-status" style="margin-left:10px; color:#64748b;"></span>
    </div>
  </form>
</section>

<!-- ============ LISTADO: ANUNCIOS RECIENTES (solo borrar) ============ -->
<section class="card-ann">
  <h2>Anuncios recientes</h2>
  <div class="table-wrap">
    <table class="stable">
      <thead>
        <tr>
          <th style="width:140px;">Fecha</th>
          <th style="width:150px;">Vigencia</th>
          <th style="width:160px;">De</th>
          <th style="width:260px;">Título</th>
          <th>Mensaje</th>
          <th style="width:120px;">Acciones</th>
        </tr>
      </thead>
      <tbody id="annAdminTbody">
        <tr><td colspan="6" style="color:#64748b;">Cargando…</td></tr>
      </tbody>
    </table>
  </div>
</section>

<!-- ============ RESTO: ADMIN USUARIOS ============ -->
<h1 style="margin-top:24px;">Administración de Usuarios</h1>
<button type="button" class="mini-btn" onclick="openUserModal()">+ Crear nuevo usuario</button>

<!-- MANAGERS -->
<h2>Managers</h2>
<div class="table-wrap">
  <table class="stable" id="tblManagers">
    <thead>
      <tr>
        <th><button class="th-sort" data-col="0" data-order="">Username <span class="chev asc">▲</span><span class="chev desc">▼</span></button></th>
        <th><button class="th-sort" data-col="1" data-order="">Nombre <span class="chev asc">▲</span><span class="chev desc">▼</span></button></th>
        <th><button class="th-sort" data-col="2" data-order="">Email <span class="chev asc">▲</span><span class="chev desc">▼</span></button></th>
        <th>Rol</th>
        <th><button class="th-sort" data-col="4" data-order="">Departamentos <span class="chev asc">▲</span><span class="chev desc">▼</span></button></th>
        <th>Acciones</th>
      </tr>
    </thead>
    <tbody>
      <% for (var i = 0; i < users.length; i++) { var user = users[i]; if (user.role === 'manager') { %>
        <tr>
          <td><%= user.username %></td>
          <td><%= user.full_name %></td>
          <td><%= user.email %></td>
          <td><%= user.role %></td>
          <td><%= user.departments || '-' %></td>
          <td>
            <button type="button" class="mini-btn btn-edit" data-user='<%- JSON.stringify(user).replace(/'/g, "&apos;") %>'>Editar</button>
          </td>
        </tr>
      <% } } %>
    </tbody>
  </table>
</div>

<!-- AGENTS -->
<h2>Agentes</h2>
<div class="table-wrap">
  <table class="stable" id="tblAgents">
    <thead>
      <tr>
        <th><button class="th-sort" data-col="0" data-order="">Username <span class="chev asc">▲</span><span class="chev desc">▼</span></button></th>
        <th><button class="th-sort" data-col="1" data-order="">Nombre <span class="chev asc">▲</span><span class="chev desc">▼</span></button></th>
        <th><button class="th-sort" data-col="2" data-order="">Email <span class="chev asc">▲</span><span class="chev desc">▼</span></button></th>
        <th>Rol</th>
        <th><button class="th-sort" data-col="4" data-order="">Departamentos <span class="chev asc">▲</span><span class="chev desc">▼</span></button></th>
        <th>Acciones</th>
      </tr>
    </thead>
    <tbody>
      <% for (var k = 0; k < users.length; k++) { var ag = users[k]; if (ag.role === 'agent') { %>
        <tr>
          <td><%= ag.username %></td>
          <td><%= ag.full_name %></td>
          <td><%= ag.email %></td>
          <td><%= ag.role %></td>
          <td><%= ag.departments || '-' %></td>
          <td>
            <button type="button" class="mini-btn btn-edit" data-user='<%- JSON.stringify(ag).replace(/'/g, "&apos;") %>'>Editar</button>
          </td>
        </tr>
      <% } } %>
    </tbody>
  </table>
</div>

<!-- USERS -->
<h2>Usuarios</h2>
<div class="table-wrap">
  <table class="stable" id="tblUsers">
    <thead>
      <tr>
        <th><button class="th-sort" data-col="0" data-order="">Username <span class="chev asc">▲</span><span class="chev desc">▼</span></button></th>
        <th><button class="th-sort" data-col="1" data-order="">Nombre <span class="chev asc">▲</span><span class="chev desc">▼</span></button></th>
        <th><button class="th-sort" data-col="2" data-order="">Email <span class="chev asc">▲</span><span class="chev desc">▼</span></button></th>
        <th>Rol</th>
        <th>Acciones</th>
      </tr>
    </thead>
    <tbody>
      <% for (var j = 0; j < users.length; j++) { var u = users[j]; if (u.role === 'user') { %>
        <tr>
          <td><%= u.username %></td>
          <td><%= u.full_name %></td>
          <td><%= u.email %></td>
          <td><%= u.role %></td>
          <td>
            <button type="button" class="mini-btn btn-edit" data-user='<%- JSON.stringify(u).replace(/'/g, "&apos;") %>'>Editar</button>
          </td>
        </tr>
      <% } } %>
    </tbody>
  </table>
</div>

<!-- =================== MODAL OVERLAY (usuarios) =================== -->
<div id="modalOverlay">
  <div class="modal-card">
    <div class="modal-header">
      <span id="modalTitle">Crear usuario</span>
      <button type="button" class="close" aria-label="Cerrar" onclick="closeUserModal()">&times;</button>
    </div>
    <div class="modal-body">
      <form method="POST" id="userForm" action="/admin/users/save">
        <input type="hidden" name="id" id="userId" />
        <div class="grid-2">
          <div><label>Username</label><input type="text" name="username" id="userUsername" required /></div>
          <div><label>Nombre completo</label><input type="text" name="name" id="userName" required /></div>
          <div><label>Email</label><input type="email" name="email" id="userEmail" required /></div>
          <div><label>Contraseña (dejar en blanco si no cambia)</label><input type="password" name="password" id="userPassword" /></div>
          <div class="full">
            <label>Rol</label>
            <select name="role" id="userRole" onchange="toggleDepartments()">
              <option value="user">Usuario</option>
              <option value="manager">Manager</option>
              <option value="agent">Agente</option>
            </select>
          </div>
          <div class="full" id="departmentsSection" style="display:none;">
            <label id="deptLabel">Departamentos asignados</label>
            <select name="departments" id="userDepartments" multiple>
              <% for (var m = 0; m < departamentos.length; m++) { %>
                <option value="<%= departamentos[m].id %>"><%= departamentos[m].name %></option>
              <% } %>
            </select>
            <small>Puedes seleccionar varios con Ctrl/Shift.</small>
          </div>
        </div>
        <div class="modal-actions">
          <button type="button" class="mini-btn btn-cancel" onclick="closeUserModal()">Cancelar</button>
          <button type="submit" class="mini-btn btn-save">Guardar</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  /* ===================== Modal ===================== */
  function openUserModal(isEdit = false) {
    const form = document.getElementById('userForm');
    form.reset();
    document.getElementById('userId').value = '';
    document.getElementById('departmentsSection').style.display = 'none';
    document.getElementById('userDepartments').multiple = true;
    document.getElementById('deptLabel').textContent = 'Departamentos asignados (múltiples)';
    document.getElementById('modalTitle').textContent = isEdit ? 'Editar usuario' : 'Crear usuario';
    document.getElementById('modalOverlay').style.display = 'flex';
  }
  function closeUserModal() { document.getElementById('modalOverlay').style.display = 'none'; }
  function toggleDepartments() {
    const role = document.getElementById('userRole').value;
    const section = document.getElementById('departmentsSection');
    const sel = document.getElementById('userDepartments');
    const label = document.getElementById('deptLabel');
    if (role === 'manager') { section.style.display = 'block'; sel.multiple = true; label.textContent = 'Departamentos asignados (múltiples)'; }
    else if (role === 'agent') { section.style.display = 'block'; sel.multiple = false; label.textContent = 'Departamento asignado';
      const selected = Array.from(sel.options).filter(o => o.selected);
      if (selected.length > 1) { const keep = selected[0].value; for (const o of sel.options) o.selected = (o.value === keep); }
    } else { section.style.display = 'none'; for (const o of sel.options) o.selected = false; }
  }

  // Delegación: botón Editar
  document.addEventListener('click', function (e) {
    if (e.target && e.target.classList.contains('btn-edit')) {
      const raw = e.target.getAttribute('data-user');
      try {
        const user = JSON.parse(raw.replace(/&apos;/g, "'"));
        openUserModal(true);
        document.getElementById('userId').value = user.id || '';
        document.getElementById('userUsername').value = user.username || '';
        document.getElementById('userName').value = user.full_name || '';
        document.getElementById('userEmail').value = user.email || '';
        document.getElementById('userRole').value = user.role || 'user';
        toggleDepartments();
        const sel = document.getElementById('userDepartments'); for (const o of sel.options) o.selected = false;
        if (user.department_ids) {
          const ids = String(user.department_ids).split(',').map(s => s.trim());
          for (const o of sel.options) if (ids.includes(String(o.value))) o.selected = true;
          if (user.role === 'agent' && ids.length) sel.value = ids[0];
        }
      } catch (err) { console.error('No se pudo parsear el usuario del botón:', err); }
    }
  });

  /* ===================== Sorting ===================== */
  function sortTable(tableId, colIndex, asc = true) {
    const table = document.getElementById(tableId);
    const tbody = table.tBodies[0];
    const rows = Array.from(tbody.rows);
    rows.sort((a, b) => {
      const A = (a.cells[colIndex]?.innerText || '').trim().toLowerCase();
      const B = (b.cells[colIndex]?.innerText || '').trim().toLowerCase();
      if (A < B) return asc ? -1 : 1;
      if (A > B) return asc ? 1 : -1;
      return 0;
    });
    rows.forEach(r => tbody.appendChild(r));
  }
  function attachSortHandlers(tableId) {
    const table = document.getElementById(tableId);
    table.querySelectorAll('.th-sort').forEach(btn => {
      btn.addEventListener('click', () => {
        const current = btn.getAttribute('data-order');
        const next = current === 'asc' ? 'desc' : 'asc';
        table.querySelectorAll('.th-sort').forEach(b => b.setAttribute('data-order',''));
        btn.setAttribute('data-order', next);
        sortTable(tableId, Number(btn.getAttribute('data-col')), next === 'asc');
      });
    });
  }
  attachSortHandlers('tblManagers'); attachSortHandlers('tblAgents'); attachSortHandlers('tblUsers');
</script>

<!-- ============ Script: Anuncios (crear + listar + borrar) ============ -->
<script>
(function(){
  const $ = s => document.querySelector(s);

  async function loadAnnouncementsAdmin(){
    try{
      // El backend devuelve activos y vigentes
      const res = await fetch('/api/announcements?limit=50', { credentials:'include' });
      const list = res.ok ? await res.json() : [];
      const tbody = $('#annAdminTbody');
      tbody.innerHTML = '';

      if(!list.length){
        tbody.innerHTML = '<tr><td colspan="6" style="color:#64748b;">No hay anuncios.</td></tr>';
        return;
      }

      const frag = document.createDocumentFragment();
      list.forEach(a=>{
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td>${a.created_at}</td>
          <td>${a.until_date || '-'}</td>
          <td>${a.dept === 'ALL' ? 'Todos' : a.dept}</td>
          <td><strong>${a.title}</strong></td>
          <td>${a.body}</td>
          <td><button class="mini-btn btn-danger btn-delete" data-id="${a.id}">Borrar</button></td>
        `;
        frag.appendChild(tr);
      });
      tbody.appendChild(frag);
    }catch(e){
      console.error(e);
      $('#annAdminTbody').innerHTML = '<tr><td colspan="6" style="color:#dc2626;">No se pudieron cargar.</td></tr>';
    }
  }

  async function submitAnnouncementAdmin(){
    const btn = document.getElementById('ann-submit');
    const status = document.getElementById('ann-status');
    status.style.color = '#64748b'; status.textContent = '';
    btn.disabled = true;

    const payload = {
      dept: document.getElementById('ann-dept').value || 'ALL',
      title: document.getElementById('ann-title').value.trim(),
      body: document.getElementById('ann-body').value.trim(),
      until_date: document.getElementById('ann-until').value || null
    };

    if(!payload.title || !payload.body){
      status.style.color = '#dc2626';
      status.textContent = 'Llena título y mensaje.';
      btn.disabled = false;
      return;
    }

    try{
      const res = await fetch('/api/announcements', {
        method:'POST',
        headers:{ 'Content-Type':'application/json' },
        credentials:'include',
        body: JSON.stringify(payload)
      });
      const data = await res.json();

      if(!res.ok || data.error){
        status.style.color = '#dc2626';
        status.textContent = data.error || 'Error al publicar.';
      }else{
        status.style.color = '#16a34a';
        status.textContent = 'Publicado.';
        document.getElementById('ann-title').value = '';
        document.getElementById('ann-body').value = '';
        await loadAnnouncementsAdmin();
      }
    }catch(e){
      console.error(e);
      status.style.color = '#dc2626';
      status.textContent = 'Error de red.';
    }finally{
      btn.disabled = false;
      setTimeout(()=>{ status.textContent=''; status.style.color;'#64748b'; }, 2000);
    }
  }

  async function deleteAnnouncement(id){
    if(!confirm('¿Borrar este anuncio? Esta acción no se puede deshacer.')) return;
    try{
      const res = await fetch('/api/announcements/' + id, {
        method:'DELETE', credentials:'include'
      });
      await res.json();
      await loadAnnouncementsAdmin();
    }catch(e){ console.error(e); }
  }

  // Delegación de acción (solo borrar)
  document.addEventListener('click', (ev) => {
    const t = ev.target;
    if (t.classList.contains('btn-delete')) {
      deleteAnnouncement(t.getAttribute('data-id'));
    }
  });

  document.getElementById('annAdminForm').addEventListener('submit', submitAnnouncementAdmin);
  loadAnnouncementsAdmin();
})();
</script>
