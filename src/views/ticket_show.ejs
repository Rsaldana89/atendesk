<section class="card" style="padding:18px">
  <h1 style="margin:0 0 10px">Ticket #<%= t.id %> — <%= t.subject %></h1>

  <!-- Controles de estado (Aceptar / Liberar / Solucionado / etc.).
       Se pasa viewMode para ocultar botones según contexto. -->
  <%- include('partials/ticket-status-controls', { t, userRole, userId, assignables, canClose, viewMode, canAccept }) %>

  <div style="display:grid;grid-template-columns:1fr 1fr;gap:12px;max-width:900px">
    <div>
      <div><b>Departamento:</b> <%= t.department %></div>
      <div><b>Categoría:</b> <%= t.category %></div>
      <div><b>Estatus:</b> <%= t.status %></div>
      <div><b>Abierto:</b> <%= new Date(t.opened_at).toLocaleString() %></div>
      <% if (t.updated_at) { %>
        <div><b>Actualizado:</b> <%= new Date(t.updated_at).toLocaleString() %></div>
      <% } %>
      <% if (t.closed_at) { %>
        <div><b>Cerrado:</b> <%= new Date(t.closed_at).toLocaleString() %></div>
      <% } %>
    </div>
    <div>
      <div><b>Creado por:</b> <%= t.created_by_name %></div>
      <% if (t.assigned_to_name) { %>
        <div><b>Asignado a:</b> <%= t.assigned_to_name %></div>
      <% } %>
      <div><b>Reportante:</b> <%= t.creator_name %></div>
      <% if (t.contact_phone) { %>
        <div><b>Teléfono:</b> <%= t.contact_phone %></div>
      <% } %>
    </div>
  </div>

  <hr style="margin:16px 0;border:0;border-top:1px solid #e5e7eb"/>

  <h3>Descripción</h3>
  <p style="white-space:pre-wrap"><%= t.description %></p>

  <% /* Evidencias (adjuntos) */ %>
  <% 
    const roleLower = (userRole || '').toLowerCase();
    const allowedRolesForEv = ['admin','manager','agent','agente'];
    const isFinalState = ['cerrado','cancelado'].includes((t.status || '').toLowerCase());
    const canManageEv = (viewMode === 'attend') && allowedRolesForEv.includes(roleLower) && !isFinalState;
    const maxEv = 2;
    const currentEvCount = attachments ? attachments.length : 0;
  %>
  <% if ((attachments && attachments.length) || canManageEv) { %>
    <hr style="margin:16px 0;border:0;border-top:1px solid #e5e7eb"/>
    <h3>Evidencias</h3>
    <div class="ev-grid" style="display:grid;grid-template-columns:repeat(auto-fill,minmax(140px,1fr));gap:10px">
      <% if (attachments && attachments.length) { %>
        <% attachments.forEach(a => { %>
          <div style="position:relative; display:block">
            <a href="/attachments/<%= a.id %>/raw" target="_blank">
              <img src="/attachments/<%= a.id %>/thumb"
                   alt="Evidencia <%= a.seq %>"
                   style="width:100%;height:auto;border:1px solid #e5e7eb;border-radius:8px"/>
            </a>
            <% if (canManageEv) { %>
              <button type="button" class="btn btn-secondary delete-att-btn" data-att-id="<%= a.id %>"
                      style="position:absolute;top:4px;right:4px;padding:2px 6px;font-size:12px;line-height:1">×</button>
            <% } %>
          </div>
        <% }) %>
      <% } %>
    </div>
    <% if (canManageEv && currentEvCount < maxEv) { %>
      <form id="ev-upload-form" action="/tickets/<%= t.id %>/attachments" method="post" enctype="multipart/form-data" style="margin-top:12px; display:flex; gap:8px; flex-wrap:wrap; align-items:center" data-max-left="<%= maxEv - currentEvCount %>">
        <input type="file" id="ev-upload-input" name="evidencias" accept="image/jpeg,image/png" multiple
               <%= (currentEvCount >= maxEv) ? 'disabled' : '' %> style="flex:1" />
        <button type="submit" class="btn" <%= (currentEvCount >= maxEv) ? 'disabled' : '' %>>Subir evidencia</button>
      </form>
      <div class="hint" style="font-size:0.875rem;color:#6b7280;margin-top:4px">
        Puedes subir hasta <%= maxEv - currentEvCount %> foto<%= (maxEv - currentEvCount) === 1 ? '' : 's' %> más.
      </div>
    <% } %>
  <% } %>

  <!-- Historial de transiciones -->
  <%- include('partials/ticket-history', { history, statusLabels, roleMap }) %>

  <!-- Controles de exportación / impresión -->
  <% // Mostrar botones de exportar e imprimir sólo para roles con permisos de gestión
     const allowedExportRoles = ['admin','manager','agente'];
     if (allowedExportRoles.includes(userRole)) { %>
    <div style="margin-top:16px; display:flex; gap:8px; flex-wrap:wrap">
      <!-- Exportar a CSV: descarga un reporte con los detalles e historial -->
      <a href="/tickets/<%= t.id %>/export" class="btn btn-secondary" target="_blank">Exportar XLS</a>
      <!-- Imprimir: permite imprimir o guardar como PDF mediante el diálogo del navegador -->
      <button type="button" class="btn btn-secondary" onclick="window.print()">Imprimir</button>
    </div>
  <% } %>

  <div style="margin-top:16px">
    <a class="btn btn-secondary" href="<%= viewMode === 'requested' ? '/tickets/requested' : '/tickets' %>">← Volver al listado</a>
  </div>
</section>

<!-- Script para manejo de transiciones -->
<!--
  Se pasa información adicional al script mediante atributos data-*.  Además del
  ID del ticket y la raíz opcional, incluimos el nombre del departamento
  asociado al ticket.  Esto permite que el cliente muestre un diálogo
  adicional cuando se marca como solucionado un ticket de los departamentos
  "Mantenimiento" o "Sistemas" para registrar los cambios de piezas.
-->
<script src="/js/ticket-show.js"
        data-ticket-id="<%= t.id %>"
        data-root=""
        data-department="<%= t.department %>"></script>

<!-- Script para gestionar eliminación de evidencias (solo para roles autorizados) -->
<script>
  (function(){
    const delBtns = document.querySelectorAll('.delete-att-btn');
    delBtns.forEach(btn => {
      btn.addEventListener('click', async function(){
        const attId = this.dataset.attId;
        if (!attId) return;
        if (!confirm('¿Eliminar esta evidencia?')) return;
        try {
          const res = await fetch(`/attachments/${attId}`, { method:'DELETE', headers:{ 'Accept': 'application/json' } });
          let data;
          try { data = await res.json(); } catch(_) { data = null; }
          if (res.ok && data && data.ok) {
            // Recargar la página para reflejar cambios
            location.reload();
          } else {
            const msg = (data && data.error) || 'Error al eliminar evidencia';
            alert(msg);
          }
        } catch (err) {
          console.error(err);
          alert('Error de red al eliminar');
        }
      });
    });

    // Manejo de envío del formulario de evidencias
    const uploadForm = document.getElementById('ev-upload-form');
    if (uploadForm) {
      uploadForm.addEventListener('submit', async function(ev) {
        ev.preventDefault();
        const maxLeft = parseInt(uploadForm.dataset.maxLeft || '0', 10);
        const input = document.getElementById('ev-upload-input');
        if (!input || !input.files || input.files.length === 0) {
          alert('Selecciona al menos una imagen.');
          return;
        }
        // Limitar la cantidad de archivos a subir según el espacio disponible
        const fileList = Array.from(input.files).slice(0, maxLeft);
        const fd = new FormData();
        fileList.forEach(file => {
          fd.append('evidencias', file);
        });
        try {
          const res = await fetch(uploadForm.action, { method:'POST', body: fd });
          let data;
          try { data = await res.json(); } catch(_) { data = null; }
          if (res.ok && data && data.ok) {
            location.reload();
          } else {
            const msg = (data && (data.error || data.msg)) || 'Error al subir evidencia';
            alert(msg);
          }
        } catch (err) {
          console.error(err);
          alert('Error de red al subir evidencia');
        }
      });
    }
  })();
</script>
